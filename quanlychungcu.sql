create database quanlychungcu
use quanlychungcu
GO

CREATE TABLE QUYEN(IDQUYEN NVARCHAR(10) PRIMARY KEY, TENQUYEN NVARCHAR(30))

CREATE TABLE PHONGBAN(MAPHONGBAN NVARCHAR(10) PRIMARY KEY, TENPHONGBAN NVARCHAR(30))

CREATE TABLE NHANVIEN(MANHANVIEN NVARCHAR(10) PRIMARY KEY, HOTEN NVARCHAR(30), GIOITINH NVARCHAR(10), DIACHI NVARCHAR(50),
 SDT NVARCHAR(10) UNIQUE, NGAYSINH DATE, EMAIL NVARCHAR(30) UNIQUE, SOCMND NVARCHAR(18) UNIQUE, 
 HINHANH IMAGE, MAPHONGBAN NVARCHAR(10) REFERENCES PHONGBAN)

CREATE TABLE DANGNHAP(MANHANVIEN NVARCHAR(10) PRIMARY KEY REFERENCES NHANVIEN, TENDANGNHAP NVARCHAR(30) UNIQUE, MATKHAU NVARCHAR(20),
 IDQUYEN NVARCHAR(10) references QUYEN)

CREATE TABLE KHU(MAKHU NVARCHAR(10) PRIMARY KEY, TENKHU NVARCHAR(10))

CREATE TABLE HOGIADINH(MAHOGD NVARCHAR(10) PRIMARY KEY, TENCHUHO NVARCHAR(30), SOCMND NVARCHAR(18) UNIQUE, SOLUONGTV INT)

CREATE TABLE CANHO(MACANHO NVARCHAR(10) PRIMARY KEY, TENCANHO NVARCHAR(20), LOAICANHO NVARCHAR(10), HINHANH IMAGE, GIACANHO FLOAT,
 TRANGTHAI NVARCHAR(30), GHICHU NVARCHAR(50), MAKHU NVARCHAR(10) REFERENCES KHU, MAHOGD NVARCHAR(10) REFERENCES HOGIADINH)

CREATE TABLE HOPDONGGD(MAHOPDONG NVARCHAR(10) PRIMARY KEY, TENHOPDONG NVARCHAR(30), LOAIHOPDONG NVARCHAR(10),
 MACANHO NVARCHAR(10) REFERENCES CANHO, MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN, MAHOGD NVARCHAR(10) REFERENCES HOGIADINH, TONGTIEN FLOAT)

CREATE TABLE CTHOPDONGGD(MACTHOPDONG INT IDENTITY(1,1) PRIMARY KEY, MAHOPDONG NVARCHAR(10) REFERENCES HOPDONGGD UNIQUE,
 NGAYKYHOPDONG DATE, THOIHAN NVARCHAR(10), GIATRI FLOAT, NOIDUNG NVARCHAR(50))

CREATE TABLE THANHVIENHOGD(MATHANHVIEN NVARCHAR(10) PRIMARY KEY, HOTENTHANHVIEN NVARCHAR(30), GIOITINHTV NVARCHAR(10), 
SOCMND NVARCHAR(18) UNIQUE, NGAYSINH DATE, SDT NVARCHAR(10) UNIQUE, EMAIL NVARCHAR(30) UNIQUE,
 HINHANH IMAGE, MAHOGD NVARCHAR(10) REFERENCES HOGIADINH)

CREATE TABLE DICHVU(MADICHVU NVARCHAR(10) PRIMARY KEY,  TENDICHVU NVARCHAR(30), GIADICHVU FLOAT)

CREATE TABLE HOADONDICHVU(MAHOADONDV NVARCHAR(10) PRIMARY KEY, TENHOADON NVARCHAR(30), MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN,
 MAHOGD NVARCHAR(10) REFERENCES HOGIADINH, MACANHO NVARCHAR(10) REFERENCES CANHO, NGAYIN DATETIME, TONGTIEN FLOAT,
  GHICHU NVARCHAR(30))

CREATE TABLE CTHDDICHVU(MACTHDDICHVU INT IDENTITY(1,1) PRIMARY KEY, MAHOADONDV NVARCHAR(10) REFERENCES HOADONDICHVU UNIQUE,
 SOLUONG INT, DONGIA FLOAT, GHICHU NVARCHAR(50), MADICHVU NVARCHAR(10) REFERENCES DICHVU)

CREATE TABLE HOADONDIEN(MAHOADONDIEN NVARCHAR(10) PRIMARY KEY, TENHOADON NVARCHAR(30), MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN, 
MAHOGD NVARCHAR(10) REFERENCES HOGIADINH, MACANHO NVARCHAR(10) REFERENCES CANHO,
 NGAYIN DATETIME, TONGTIEN FLOAT, GHICHU NVARCHAR(50))

CREATE TABLE CTHDDIEN(MACTHDDIEN INT IDENTITY(1,1) PRIMARY KEY, MAHOADONDIEN NVARCHAR(10) REFERENCES HOADONDIEN UNIQUE, 
SOLUONG INT, DONGIA FLOAT, GHICHU NVARCHAR(50))

CREATE TABLE HOADONNUOC(MAHOADONNUOC NVARCHAR(10) PRIMARY KEY, TENHOADON NVARCHAR(30), MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN,
 MAHOGD NVARCHAR(10) REFERENCES HOGIADINH, MACANHO NVARCHAR(10) REFERENCES CANHO,
  NGAYIN DATETIME, TONGTIEN FLOAT, GHICHU NVARCHAR(50))

CREATE TABLE CTHDNUOC(MACTHDNUOC INT IDENTITY(1,1) PRIMARY KEY, MAHOADONNUOC NVARCHAR(10) REFERENCES HOADONNUOC UNIQUE, 
SOLUONG INT, DONGIA FLOAT, GHICHU NVARCHAR(50))

CREATE TABLE BAIGIUXE(MABAIGIUXE NVARCHAR(10) PRIMARY KEY, LOAIXE NVARCHAR(10))
 
CREATE TABLE XE(MAXE NVARCHAR(10) PRIMARY KEY, BIENSO NVARCHAR(10) UNIQUE, HANGXE NVARCHAR(30), LOAIXE NVARCHAR(10),
 MAUXE NVARCHAR(10), MATHANHVIEN NVARCHAR(10) REFERENCES THANHVIENHOGD, MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN, 
 MABAIGIUXE NVARCHAR(10) REFERENCES BAIGIUXE, MATHEXE NVARCHAR(10) UNIQUE)

CREATE TABLE NGUOILA(MANGUOILA NVARCHAR(10) PRIMARY KEY, SOCMND NVARCHAR(18) UNIQUE)

CREATE TABLE QUANLYBAIGIUXE(MAXE NVARCHAR(10) REFERENCES XE, MABAIGIUXE NVARCHAR(10) REFERENCES BAIGIUXE,
 MANHANVIEN NVARCHAR(10) REFERENCES NHANVIEN, THOIGIANVAO DATETIME, THOIGIANRA DATETIME, 
 MANGUOILA NVARCHAR(10) REFERENCES NGUOILA, CONSTRAINT KIEMTRA_NGAY CHECK (THOIGIANRA > THOIGIANVAO))

insert into QUYEN values('ADMIN', 'Quyen Admin')
insert into QUYEN values('QUANLY', 'Quyen Quan Ly')
insert into QUYEN values('NHANVIEN', 'Quyen Nhan Vien')

insert into PHONGBAN values('GD','Giam doc')
insert into PHONGBAN values('QLNL','Quan ly nhan luc')
insert into PHONGBAN values('NL','Nhan luc')

insert into NHANVIEN values('1', 'Phan Tuan Anh', 'Nam', 'Tam Ky', '0396355253', '06/12/1999', 'phantuananhltt@gmail.com',
 '206321161', '', 'GD')
insert into NHANVIEN values('2', 'Le Thi Diem Quynh', 'Nữ', 'Dien Ban', '0123456789', '04/21/1999', 'diemquynh@gmail.com',
 '123456789', '', 'QLNL')
insert into NHANVIEN values('3', 'Nguyen Duc Huy', 'Nam', 'Da Nang', '0234567891', '06/17/1999', 'nguyenduchuy@gmail.com',
 '234567891', '', 'QLNL')
insert into NHANVIEN values('4', 'Vo Thi Quynh Nhung', 'Nữ', 'Da Nang', '0345678912', '03/17/1999', 'quynhnhung@gmail.com',
 '345678912', '', 'NL')

insert into KHU values ('K1','Khu A')
insert into KHU values ('K2','Khu B')
insert into KHU values ('K3','Khu C')

insert into DANGNHAP values('1', 'tuananh', '1206', 'ADMIN')
insert into DANGNHAP values('2', 'diemquynh', '2104', 'ADMIN')
insert into DANGNHAP values('3', 'duchuy', '1706', 'QUANLY')
insert into DANGNHAP values('4', 'quynhnhung', '1703', 'NHANVIEN')

create procedure psDangNhap @TENDANGNHAP nvarchar(30), @MATKHAU nvarchar(20), @IDQUYEN nvarchar(10)
as
begin transaction
	select count(*)
	from DANGNHAP
	where TENDANGNHAP = @TENDANGNHAP and MATKHAU = @MATKHAU and IDQUYEN = @IDQUYEN
if (@@ERROR <>0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION


create procedure psDoiMatKhau @TENDANGNHAP nvarchar(30), @MATKHAUCU nvarchar(20), @MATKHAUMOI nvarchar(20),
@XACNHANMATKHAUMOI nvarchar(20)
as
begin transaction
	update DANGNHAP set MATKHAU = @MATKHAUMOI where MATKHAU = @MATKHAUCU and @MATKHAUMOI = @XACNHANMATKHAUMOI and TENDANGNHAP = @TENDANGNHAP
if (@@ERROR <>0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemTaiKhoan @MANHANVIEN nvarchar(10), @TENDANGNHAP nvarchar(30), @MATKHAU nvarchar(20), @IDQUYEN nvarchar(10)
as
begin transaction
	if exists (select * from DANGNHAP where @MANHANVIEN = MANHANVIEN or @TENDANGNHAP = TENDANGNHAP)
		return
	else
		insert into DANGNHAP values (@MANHANVIEN, @TENDANGNHAP, @MATKHAU, @IDQUYEN)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psXoaTaiKhoan @TENDANGNHAP nvarchar(30)
as
begin transaction
	if ((select count(*) from DANGNHAP where IDQUYEN = 'ADMIN') = 1)
		delete from DANGNHAP where TENDANGNHAP = @TENDANGNHAP and IDQUYEN != 'ADMIN'
	else
		delete from DANGNHAP where TENDANGNHAP = @TENDANGNHAP		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaTaiKhoan @MANHANVIEN nvarchar(10), @TENDANGNHAP nvarchar(30), @MATKHAU nvarchar(20), @IDQUYEN nvarchar(10)
as
begin transaction
		if (((select count(*) from DANGNHAP where IDQUYEN = 'ADMIN') = 1) and (@IDQUYEN = 'QUANLY' or @IDQUYEN = 'NHANVIEN'))
			return
		else
			update DANGNHAP set TENDANGNHAP = @TENDANGNHAP, MATKHAU = @MATKHAU, IDQUYEN = @IDQUYEN where MANHANVIEN = @MANHANVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemTaiKhoan @TENDANGNHAP nvarchar(30)
as
begin transaction
	select * from DANGNHAP where TENDANGNHAP = @TENDANGNHAP
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiDanhSachDichVu
as
begin transaction
	select * from DICHVU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemDichVu @MADICHVU NVARCHAR(10),  @TENDICHVU NVARCHAR(30), @GIADICHVU FLOAT
as
begin transaction
	if exists (select * from DICHVU where MADICHVU = @MADICHVU )
		return
	else
		insert into DICHVU values (@MADICHVU, @TENDICHVU, @GIADICHVU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psXoaDichVu @MADICHVU NVARCHAR(10)
as
begin transaction
		delete from DICHVU where MADICHVU = @MADICHVU		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaDichVu @MADICHVU NVARCHAR(10),  @TENDICHVU NVARCHAR(30), @GIADICHVU FLOAT
as
begin transaction
	if not exists (select * from DICHVU where MADICHVU = @MADICHVU)
		return
	else
		update DICHVU set TENDICHVU=@TENDICHVU, GIADICHVU=@GIADICHVU where MADICHVU=@MADICHVU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemDichVuTheoTenDichVu @MADICHVU nvarchar(10)
as
begin transaction
	select * from DICHVU where MADICHVU = @MADICHVU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE procedure psThemHoaDonDichVu @MAHOADONDV NVARCHAR(10), 
	@TENHOADON NVARCHAR(30), 
	@MANHANVIEN NVARCHAR(10),
	@MAHOGD NVARCHAR(10), 
	@MACANHO NVARCHAR(10), 
	@NGAYIN DATETIME, 
	@TONGTIEN FLOAT,
	@GHICHU NVARCHAR(30)
as
begin transaction
if exists (select * from HOADONDICHVU where MAHOADONDV = @MAHOADONDV)
		return
else
		insert into HOADONDICHVU values (@MAHOADONDV, @TENHOADON,@MANHANVIEN,@MAHOGD,@MACANHO,@NGAYIN,@TONGTIEN,@GHICHU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaHoaDonDichVu @MAHOADONDV NVARCHAR (10)
as
begin transaction
		delete from HOADONDICHVU where MAHOADONDV = @MAHOADONDV
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaHoaDonDichVu @MAHOADONDV NVARCHAR(10), 
	@TENHOADON NVARCHAR(30), 
	@MANHANVIEN NVARCHAR(10),
	@MAHOGD NVARCHAR(10), 
	@MACANHO NVARCHAR(10), 
	@NGAYIN DATETIME, 
	@TONGTIEN FLOAT,
	@GHICHU NVARCHAR(30)
as
begin transaction
	if not exists (select * from HOADONDICHVU where MAHOADONDV = @MAHOADONDV)
		return
	else
		update HOADONDICHVU set TENHOADON=@TENHOADON, MANHANVIEN=@MANHANVIEN, MAHOGD=@MAHOGD, MACANHO=@MACANHO, NGAYIN=@NGAYIN, TONGTIEN=@TONGTIEN, GHICHU=@GHICHU
							where MAHOADONDV = @MAHOADONDV
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE procedure psThemChiTietHoaDonDichVu @MAHOADONDV NVARCHAR(10),
 @SOLUONG INT, 
 @DONGIA FLOAT, 
 @GHICHU NVARCHAR(50), 
 @MADICHVU NVARCHAR(10)
as
begin transaction
		insert into CTHDDICHVU values (@MAHOADONDV, @SOLUONG, @DONGIA, @GHICHU, @MADICHVU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaChiTietHoaDonDichVu @MAHOADONDV NVARCHAR(10),
 @SOLUONG INT, 
 @DONGIA FLOAT, 
 @GHICHU NVARCHAR(50), 
 @MADICHVU NVARCHAR(10)
as
begin transaction
	if not exists (select * from CTHDDICHVU where MAHOADONDV = @MAHOADONDV)
		return
	else
		update CTHDDICHVU set SOLUONG=@SOLUONG,GHICHU=@GHICHU where MAHOADONDV = @MAHOADONDV
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaChiTietHoaDonDichVu @MAHOADONDV NVARCHAR (10)
as
begin transaction
		delete from CTHDDICHVU where MAHOADONDV = @MAHOADONDV	
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemTongTienChoHoaDonDichVu
    @MAHOADONDV NVARCHAR (10),
    @TONGTIEN       FLOAT
as
begin transaction
		update HOADONDICHVU set TONGTIEN=@TONGTIEN where MAHOADONDV = @MAHOADONDV	
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemHoaDonDichVuTheoMaHoaDon @MAHOADONDV nvarchar(10)
as
begin transaction
	select * from HOADONDICHVU where MAHOADONDV = @MAHOADONDV	
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietHoaDonNuoc
as
begin transaction
	select HOADONNUOC.MAHOADONNUOC, TENHOADON, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONNUOC.GHICHU
	FROM HOADONNUOC, CTHDNUOC
	WHERE HOADONNUOC.MAHOADONNUOC=CTHDNUOC.MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiHoaDonNuoc
as
begin transaction
	select * from HOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE procedure psThemHoaDonNuoc
    @MAHOADONNUOC NVARCHAR (10),
    @TENHOADON   NVARCHAR (30),
    @MANHANVIEN   NVARCHAR (10),
    @MAHOGD       NVARCHAR (10),
    @MACANHO      NVARCHAR (10),
    @NGAYIN      DATETIME,
    @TONGTIEN    FLOAT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
if exists (select * from HOADONNUOC where MAHOADONNUOC = @MAHOADONNUOC)
		return
else
		insert into HOADONNUOC values (@MAHOADONNUOC, @TENHOADON,@MANHANVIEN,@MAHOGD,@MACANHO,@NGAYIN,@TONGTIEN,@GHICHU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaHoaDonNuoc @MAHOADONNUOC NVARCHAR (10)
as
begin transaction
		delete from HOADONNUOC where MAHOADONNUOC = @MAHOADONNUOC		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaHoaDonNuoc (@MAHOADONNUOC NVARCHAR (10),
    @TENHOADON   NVARCHAR (30),
    @MANHANVIEN   NVARCHAR (10),
    @MAHOGD       NVARCHAR (10),
    @MACANHO      NVARCHAR (10),
    @NGAYIN      DATETIME,
    @TONGTIEN    FLOAT (53),
    @GHICHU       NVARCHAR (50))
as
begin transaction
	if not exists (select * from HOADONNUOC where MAHOADONNUOC = MAHOADONNUOC)
		return
	else
		update HOADONNUOC set TENHOADON=@TENHOADON, MANHANVIEN=@MANHANVIEN, MAHOGD=@MAHOGD, MACANHO=@MACANHO, NGAYIN=@NGAYIN, TONGTIEN=@TONGTIEN, GHICHU=@GHICHU
							where MAHOADONNUOC=MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE procedure psThemChiTietHoaDonNuoc
    @MAHOADONNUOC NVARCHAR (10),
    @SOLUONG      INT,
    @DONGIA       FLOAT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
		insert into CTHDNUOC values (@MAHOADONNUOC, @SOLUONG, @DONGIA, @GHICHU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaChiTietHoaDonNuoc
    @MAHOADONNUOC NVARCHAR (10),
    @SOLUONG      INT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
	if not exists (select * from CTHDNUOC where MAHOADONNUOC = @MAHOADONNUOC)
		return
	else
		update CTHDNUOC set SOLUONG=@SOLUONG,GHICHU=@GHICHU WHERE MAHOADONNUOC=@MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaChiTietHoaDonNuoc @MAHOADONNUOC NVARCHAR (10)
as
begin transaction
		delete from CTHDNUOC where MAHOADONNUOC = @MAHOADONNUOC		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemTongTienChoHoaDonNuoc
    @MAHOADONNUOC NVARCHAR (10),
    @TONGTIEN       FLOAT
as
begin transaction
		update HOADONNUOC set TONGTIEN=@TONGTIEN where MAHOADONNUOC=@MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemChiTietHoaDonNuocTheoMaHoaDon @MAHOADONNUOC nvarchar(10)
as
begin transaction
	select * from CTHDNUOC where MAHOADONNUOC = @MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemHoaDonDien
    @MAHOADONDIEN NVARCHAR (10),
    @TENHOADON   NVARCHAR (30),
    @MANHANVIEN   NVARCHAR (10),
    @MAHOGD       NVARCHAR (10),
    @MACANHO      NVARCHAR (10),
    @NGAYIN      DATETIME,
    @TONGTIEN    FLOAT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
if exists (select * from HOADONDIEN where MAHOADONDIEN = MAHOADONDIEN)
		return
else
		insert into HOADONDIEN values (@MAHOADONDIEN,@TENHOADON,@MANHANVIEN,@MAHOGD,@MACANHO,@NGAYIN,@TONGTIEN,@GHICHU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaHoaDonDien @MAHOADONDIEN NVARCHAR (10)
as
begin transaction
		delete from HOADONDIEN where MAHOADONDIEN = @MAHOADONDIEN		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaHoaDonDien (@MAHOADONDIEN NVARCHAR (10),
    @TENHOADON   NVARCHAR (30),
    @MANHANVIEN   NVARCHAR (10),
    @MAHOGD       NVARCHAR (10),
    @MACANHO      NVARCHAR (10),
    @NGAYIN      DATETIME,
    @TONGTIEN    FLOAT (53),
    @GHICHU       NVARCHAR (50))
as
begin transaction
	if not exists (select * from HOADONDIEN where MAHOADONDIEN = @MAHOADONDIEN)
		return
	else
		update HOADONDIEN set TENHOADON=@TENHOADON, MANHANVIEN=@MANHANVIEN, MAHOGD=@MAHOGD, MACANHO=@MACANHO, NGAYIN=@NGAYIN, TONGTIEN=@TONGTIEN, GHICHU=@GHICHU
							where MAHOADONDIEN=@MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE procedure psThemChiTietHoaDonDien
    @MAHOADONDIEN NVARCHAR (10),
    @SOLUONG      INT,
    @DONGIA       FLOAT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
		insert into CTHDDIEN values (@MAHOADONDIEN, @SOLUONG, @DONGIA, @GHICHU)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaChiTietHoaDonDien
    @MAHOADONDIEN NVARCHAR (10),
    @SOLUONG      INT,
    @GHICHU       NVARCHAR (50)
as
begin transaction
	if not exists (select * from CTHDDIEN where MAHOADONDIEN = @MAHOADONDIEN)
		return
	else
		update CTHDDIEN set SOLUONG=@SOLUONG,GHICHU=@GHICHU WHERE MAHOADONDIEN=@MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psXoaChiTietHoaDonDien @MAHOADONDIEN NVARCHAR (10)
as
begin transaction
		delete from CTHDDIEN where MAHOADONDIEN = @MAHOADONDIEN		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemTongTienChoHoaDonDien
    @MAHOADONDIEN NVARCHAR (10),
    @TONGTIEN       FLOAT
as
begin transaction
		update HOADONDIEN set TONGTIEN=@TONGTIEN where MAHOADONDIEN=@MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemChiTietHoaDonDienTheoMaHoaDon @MAHOADONDIEN nvarchar(10)
as
begin transaction
	select * from CTHDDIEN where MAHOADONDIEN = @MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psThemThanhVienHoGD  @MATHANHVIEN NVARCHAR (10), @HOTENTHANHVIEN NVARCHAR (30), 
								@GIOITINHTV NVARCHAR (10), @SOCMND NVARCHAR (18), @NGAYSINH date, @SDT NVARCHAR (10), 
								@EMAIL NVARCHAR (30), @HINHANH IMAGE, @MAHOGD NVARCHAR (10)
AS
BEGIN TRANSACTION
	IF EXISTS (Select * from THANHVIENHOGD where MATHANHVIEN = @MATHANHVIEN)
		RETURN
	ELSE
		INSERT INTO THANHVIENHOGD VALUES (@MATHANHVIEN,@HOTENTHANHVIEN,@GIOITINHTV,@SOCMND,@NGAYSINH, @SDT,@EMAIL,@HINHANH,@MAHOGD)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psXoaThanhVienHoGD @MATHANHVIEN NVARCHAR (10)
AS
BEGIN TRANSACTION
	IF NOT EXISTS (Select * from THANHVIENHOGD where MATHANHVIEN = @MATHANHVIEN)
		RETURN
	ELSE
		DELETE FROM THANHVIENHOGD WHERE MATHANHVIEN = @MATHANHVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psSuaThanhVienHoGD @MATHANHVIEN NVARCHAR (10), @HOTENTHANHVIEN NVARCHAR (30), 
										@GIOITINHTV NVARCHAR (10),@SOCMND NVARCHAR (18), @NGAYSINH DATE,
										 @SDT NVARCHAR (10), 
										@EMAIL NVARCHAR (30), @HINHANH IMAGE, @MAHOGD NVARCHAR (10)
AS
BEGIN TRANSACTION
	IF NOT EXISTS (Select * from THANHVIENHOGD where MATHANHVIEN = @MATHANHVIEN)
		RETURN
	ELSE
	   UPDATE THANHVIENHOGD SET HOTENTHANHVIEN = @HOTENTHANHVIEN, GIOITINHTV = @GIOITINHTV, SOCMND = @SOCMND, @NGAYSINH = @NGAYSINH,
								SDT = @SDT, EMAIL = @EMAIL, HINHANH = @HINHANH, MAHOGD = @MAHOGD WHERE MATHANHVIEN = @MATHANHVIEN 
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psTimThanhVien @MATHANHVIEN NVARCHAR (10)
AS
BEGIN TRANSACTION
	select *from THANHVIENHOGD WHERE MATHANHVIEN = @MATHANHVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psHIENTHITHANHVIENTHEOHO @MAHOGD NVARCHAR (10)
AS
BEGIN TRANSACTION
	select *from THANHVIENHOGD WHERE MAHOGD = @MAHOGD
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psHienThiThanhVien 
AS
BEGIN TRANSACTION
	select * from THANHVIENHOGD 
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE TRIGGER ktraNhapTV on THANHVIENHOGD for INSERT AS
DECLARE @SoLuongTV  int
Declare @MaHoGD nvarchar (10) 
Select @SoLuongTV= SOLUONGTV, @MaHoGD = HOGIADINH.MAHOGD
From HOGIADINH, inserted
where HOGIADINH.MAHOGD = inserted.MAHOGD
Update HOGIADINH set SOLUONGTV = SOLUONGTV +1 where MAHOGD = @MaHoGD
return

CREATE TRIGGER ktraXoaThanhVien on THANHVIENHOGD for DELETE AS
DECLARE @SoLuongTV  int
Declare @MaHoGD nvarchar (10) 
Select @SoLuongTV= SOLUONGTV, @MaHoGD = HOGIADINH.MAHOGD
From HOGIADINH,  deleted
where HOGIADINH.MAHOGD = deleted.MAHOGD
Update HOGIADINH set SOLUONGTV = SOLUONGTV - 1 where MAHOGD = @MaHoGD
return

CREATE PROCEDURE psThemCanHo @MACANHO NVARCHAR (10), @TENCANHO NVARCHAR (20),@LOAICANHO NVARCHAR (10), @HINHANH IMAGE, @GIACANHO FLOAT, @TRANGTHAI NVARCHAR (30),@GHICHU NVARCHAR(50), @MAKHU NVARCHAR (10), @MAHOGD NVARCHAR(10)
AS
BEGIN TRANSACTION
	if exists (Select * from CANHO WHERE MACANHO = @MACANHO)
		return 
	else
		Insert into CANHO VALUES (@MACANHO,@TENCANHO, @LOAICANHO,@HINHANH,@GIACANHO,@TRANGTHAI,@GHICHU,@MAKHU,@MAHOGD)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psXoaCanHo @MACANHO NVARCHAR (10)
AS
BEGIN TRANSACTION
	if exists (Select * from CANHO WHERE MACANHO = @MACANHO)
		DELETE FROM CANHO WHERE MACANHO = @MACANHO
	else
		PRINT 'KHONG CÓ CĂN HÔ NÀY'
		
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psSuaCanHo @MACANHO NVARCHAR (10), @TENCANHO NVARCHAR (20),@LOAICANHO NVARCHAR (10), 
								@HINHANH IMAGE, @GIACANHO FLOAT,
								@GHICHU NVARCHAR(50), @MAKHU NVARCHAR (10), @MAHOGD NVARCHAR(10)
AS
BEGIN TRANSACTION
	if not exists (Select * from CANHO WHERE MACANHO = @MACANHO)
		return 
	else
		update CANHO set TENCANHO = @TENCANHO, LOAICANHO = @LOAICANHO, HINHANH = @HINHANH, GIACANHO = @GIACANHO,
									  GHICHU = @GHICHU, 
									MAKHU = @MAKHU, MAHOGD = @MAHOGD WHERE MACANHO = @MACANHO
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psTimCanHo @MACANHO NVARCHAR (10)
AS
BEGIN TRANSACTION
	Select * from CANHO WHERE MACANHO = @MACANHO
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psThemHoGiaDinh @MAHOGD NVARCHAR (10), @TENCHUHO NVARCHAR (30), @SOCMND NVARCHAR (18), @SOLUONGTV INT
AS
BEGIN TRANSACTION
	IF EXISTS (Select * from HOGIADINH where MAHOGD = @MAHOGD)
		RETURN
	ELSE
		INSERT INTO HOGIADINH VALUES (@MAHOGD,@TENCHUHO,@SOCMND,@SOLUONGTV)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psXoaHoGiaDinh @MAHOGD NVARCHAR (10)
AS
BEGIN TRANSACTION
	IF not EXISTS (Select * from HOGIADINH where MAHOGD = @MAHOGD)
		RETURN
	ELSE
		DELETE FROM  HOGIADINH WHERE MAHOGD = @MAHOGD
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psSuaHoGiaDinh @MAHOGD NVARCHAR (10), @TENCHUHO NVARCHAR (30), @SOCMND NVARCHAR (18), @SOLUONGTV INT
AS
BEGIN TRANSACTION
	IF not EXISTS (Select * from HOGIADINH where MAHOGD = @MAHOGD)
		RETURN
	ELSE
		Update  HOGIADINH set MAHOGD = @MAHOGD, TENCHUHO  = @TENCHUHO, SOCMND = @SOCMND, SOLUONGTV = @SOLUONGTV where  MAHOGD = @MAHOGD
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psTimHoGiaDinh @MAHOGD NVARCHAR (10)
AS
BEGIN TRANSACTION
	select * from HOGIADINH WHERE MAHOGD = @MAHOGD
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

CREATE PROCEDURE psThemMoiHopDong2 @MAHOPDONG NVARCHAR (10), @TENHOPDONG NVARCHAR (30), @LOAIHOPDONG NVARCHAR (10), @MACANHO NVARCHAR (10), @MANHANVIEN NVARCHAR (10), @MAHOGD NVARCHAR (10), @TONGTIEN float
AS 
BEGIN TRANSACTION
	IF EXISTS (Select * from HOPDONGGD where @MAHOPDONG = MAHOPDONG)
		return
	if exists (Select * from CANHO where @MACANHO = MACANHO and (TRANGTHAI = 'Đã bán' or TRANGTHAI = 'Đã thuê' ))
		begin
			print 'can ho co ng thuê'
			return 
		end
	else
		INSERT INTO HOPDONGGD VALUES (@MAHOPDONG,@TENHOPDONG,@LOAIHOPDONG,@MACANHO,@MANHANVIEN,@MAHOGD,@TONGTIEN)	
		begin
			if (@LOAIHOPDONG = 'Thuê')
			update CANHO set TRANGTHAI = 'Đã thuê' where @MaCanHo = MACANHO
			if (@LOAIHOPDONG = 'Mua')
				update CANHO set TRANGTHAI = 'Đã bán' where @MaCanHo = MACANHO
		END
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psSuaHopDong @MAHOPDONG NVARCHAR (10), @TENHOPDONG NVARCHAR (30), @LOAIHOPDONG NVARCHAR (10), @MACANHO NVARCHAR (10), @MANHANVIEN NVARCHAR (10), @MAHOGD NVARCHAR (10),@TONGTIEN float
AS 
BEGIN TRANSACTION
	IF not EXISTS (Select * from HOPDONGGD where @MAHOPDONG = MAHOPDONG)
		return
	else
		UPDATE HOPDONGGD SET TENHOPDONG= @TENHOPDONG, 
							LOAIHOPDONG = @LOAIHOPDONG,MACANHO = @MACANHO,
							MANHANVIEN= @MANHANVIEN,
							MAHOGD = @MAHOGD,
							TONGTIEN = @TONGTIEN
						WHERE MAHOPDONG = @MAHOPDONG
		begin
			if (@LOAIHOPDONG = 'Thuê')
			update CANHO set TRANGTHAI = 'Đã thuê' where @MaCanHo = MACANHO
			if (@LOAIHOPDONG = 'Mua')
				update CANHO set TRANGTHAI = 'Đã bán' where @MaCanHo = MACANHO
		END
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psXoaHopDong @MAHOPDONG NVARCHAR (10)
AS 
Declare @MaCanHo nvarchar (10)
BEGIN TRANSACTION
	IF not EXISTS (Select * from HOPDONGGD where @MAHOPDONG = MAHOPDONG)
		return
	else
		Begin
			update CANHO set TRANGTHAI = 'Trống' where @MaCanHo = MACANHO
		End
		DELETE FROM HOPDONGGD where MAHOPDONG = @MAHOPDONG
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psTimHopDong @MAHOPDONG NVARCHAR (10)
AS 
BEGIN TRANSACTION
	Select HOPDONGGD.MAHOPDONG,NGAYKYHOPDONG,THOIHAN, GIATRI,LOAIHOPDONG,TENHOPDONG,MACANHO,NHANVIEN.MANHANVIEN,HOTEN,HOGIADINH.MAHOGD,TENCHUHO,NOIDUNG, HOPDONGGD.TONGTIEN
	From HOPDONGGD,CTHOPDONGGD,NHANVIEN,HOGIADINH
	Where HOPDONGGD.MAHOPDONG = CTHOPDONGGD.MAHOPDONG and (NHANVIEN.MANHANVIEN = HOPDONGGD.MANHANVIEN) and (HOGIADINH.MAHOGD = HOPDONGGD.MAHOGD) and (HOPDONGGD.MAHOPDONG = @MAHOPDONG)
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psHienThiHopDong 
AS 
BEGIN TRANSACTION
	Select * from HOPDONGGD
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psThemChiTietHopDong @MAHOPDONG NVARCHAR (10), @NGAYKYHOPDONG DATETIME , @THOIHAN NVARCHAR (10), @GIATRI FLOAT, @NOIDUNG NVARCHAR (50)
AS 
BEGIN TRANSACTION
		INSERT INTO CTHOPDONGGD VALUES (@MAHOPDONG,@NGAYKYHOPDONG,@THOIHAN, @GIATRI,@NOIDUNG)
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psSuaChiTietHopDong @MAHOPDONG NVARCHAR (10), @NGAYKYHOPDONG DATETIME , @THOIHAN NVARCHAR (10), @GIATRI FLOAT, @NOIDUNG NVARCHAR (50)
AS 
BEGIN TRANSACTION
		if not exists (Select * from CTHOPDONGGD where MAHOPDONG = @MAHOPDONG)
			return
		else
			Update CTHOPDONGGD set MAHOPDONG = @MAHOPDONG, NGAYKYHOPDONG = @NGAYKYHOPDONG, THOIHAN= @THOIHAN, GIATRI = @GIATRI, NOIDUNG = @NOIDUNG where MAHOPDONG = @MAHOPDONG
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psXoaCTHopDong @MAHOPDONG NVARCHAR (10)
AS 
BEGIN TRANSACTION
		if not exists (Select * from CTHOPDONGGD where MAHOPDONG = @MAHOPDONG)
			return
		else
			Delete from CTHOPDONGGD where MAHOPDONG = @MAHOPDONG
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psTimCTHopDong @MAHOPDONG NVARCHAR (10)
AS 
BEGIN TRANSACTION
		Select * from CTHOPDONGGD where MAHOPDONG = @MAHOPDONG
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psHienThiCTHopDong 
AS 
BEGIN TRANSACTION
		Select * from CTHOPDONGGD 
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psHienThiHopDongVaChiTietHopDong
AS 
BEGIN TRANSACTION
		Select HOPDONGGD.MAHOPDONG,NGAYKYHOPDONG,THOIHAN, GIATRI,LOAIHOPDONG,TENHOPDONG,MACANHO,NHANVIEN.MANHANVIEN,HOTEN,HOGIADINH.MAHOGD,TENCHUHO,NOIDUNG, HOPDONGGD.TONGTIEN
		From HOPDONGGD,CTHOPDONGGD,NHANVIEN,HOGIADINH
		Where HOPDONGGD.MAHOPDONG = CTHOPDONGGD.MAHOPDONG and (NHANVIEN.MANHANVIEN = HOPDONGGD.MANHANVIEN) and (HOGIADINH.MAHOGD = HOPDONGGD.MAHOGD)
IF (@@ERROR <> 0)
ROLLBACK TRANSACTION
ELSE
COMMIT TRANSACTION

CREATE PROCEDURE psThemTongTienHopDong
    @MAHOPDONG NVARCHAR (10),
    @TONGTIEN       FLOAT
AS 
BEGIN TRANSACTION
		update HOPDONGGD set TONGTIEN=@TONGTIEN where MAHOPDONG = @MAHOPDONG
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThemNhanVien 
	@MANHANVIEN NVARCHAR(10),
	@HOTEN NVARCHAR(30),
	@GIOITINH NVARCHAR(10),
	@DIACHI NVARCHAR(50),
	@SDT NVARCHAR(10),
	@NGAYSINH DATE,
	@EMAIL NVARCHAR(30),
	@SOCMND NVARCHAR(18),
	@HINHANH IMAGE,
	@MAPHONGBAN NVARCHAR(10)
as
begin transaction
	if exists (select * from NHANVIEN where @MANHANVIEN = MANHANVIEN)
		return
	else
		insert into NHANVIEN values (@MANHANVIEN, @HOTEN, @GIOITINH, @DIACHI, @SDT, @NGAYSINH,
		 @EMAIL, @SOCMND, @HINHANH, @MAPHONGBAN)
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psSuaNhanVien 
	@MANHANVIEN NVARCHAR(10),
	@HOTEN NVARCHAR(30),
	@GIOITINH NVARCHAR(10),
	@DIACHI NVARCHAR(50),
	@SDT NVARCHAR(10),
	@NGAYSINH DATE,
	@EMAIL NVARCHAR(30),
	@SOCMND NVARCHAR(18),
	@HINHANH IMAGE,
	@MAPHONGBAN NVARCHAR(10)
as
begin transaction
	if not exists (select * from NHANVIEN where @MANHANVIEN = MANHANVIEN)
		return
	else
		update NHANVIEN set HOTEN = @HOTEN, GIOITINH = @GIOITINH, DIACHI = @DIACHI, SDT = @SDT, NGAYSINH = @NGAYSINH, 
		EMAIL = @EMAIL, SOCMND = @SOCMND, HINHANH = @HINHANH, MAPHONGBAN = @MAPHONGBAN where MANHANVIEN = @MANHANVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psXoaNhanVien @MANHANVIEN NVARCHAR(10)
as
begin transaction
	delete from NHANVIEN where @MANHANVIEN = MANHANVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psTimKiemNhanVien @MANHANVIEN NVARCHAR(10)
as
begin transaction
	select * from NHANVIEN where @MANHANVIEN = MANHANVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeCanHo @TRANGTHAI NVARCHAR(30)
as
begin transaction
	select b.MACANHO, TENCANHO, LOAICANHO, TRANGTHAI, GIACANHO, b.MAKHU, THOIHAN, GIATRI, TONGTIEN
	from KHU a, CANHO b, HOPDONGGD c, CTHOPDONGGD d
	where a.MAKHU = b.MAKHU and b.MACANHO = c.MACANHO and c.MAHOPDONG = d.MAHOPDONG and TRANGTHAI = @TRANGTHAI
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeDichVu @THANG int, @NAM int
as
begin transaction
	select b.MACTHDDICHVU, TENDICHVU, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from DICHVU a, CTHDDICHVU b ,HOADONDICHVU c
	where a.MADICHVU = b.MADICHVU and b.MAHOADONDV = c.MAHOADONDV and MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeDichVuTheoNam @NAM int
as
begin transaction
	select b.MACTHDDICHVU, TENDICHVU, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from DICHVU a, CTHDDICHVU b ,HOADONDICHVU c
	where a.MADICHVU = b.MADICHVU and b.MAHOADONDV = c.MAHOADONDV and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeDoanhThu @THANG int, @NAM int
as
begin transaction
	declare @TongTienDichVu float
	declare @TongTienDien float
	declare @TongTienNuoc float
	set @TongTienDichVu = (select SUM(TONGTIEN)
	from HOADONDICHVU
	where MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM)
	set @TongTienDien = (select SUM(TONGTIEN)
	from HOADONDIEN
	where MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM)
	set @TongTienNuoc = (select SUM(TONGTIEN)
	from HOADONNUOC
	where MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM)
	select @TongTienDichVu, @TongTienDien, @TongTienNuoc
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeDoanhThuTheoNam @NAM int
as
begin transaction
	declare @TongTienDichVu float
	declare @TongTienDien float
	declare @TongTienNuoc float
	set @TongTienDichVu = (select SUM(TONGTIEN)
	from HOADONDICHVU
	where YEAR(NGAYIN) = @NAM)
	set @TongTienDien = (select SUM(TONGTIEN)
	from HOADONDIEN
	where YEAR(NGAYIN) = @NAM)
	set @TongTienNuoc = (select SUM(TONGTIEN)
	from HOADONNUOC
	where YEAR(NGAYIN) = @NAM)
	select @TongTienDichVu, @TongTienDien, @TongTienNuoc
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeTienDien @THANG int, @NAM int
as
begin transaction
	select b.MACTHDDIEN, TENHOADON, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from HOADONDIEN a, CTHDDIEN b
	where a.MAHOADONDIEN = b.MAHOADONDIEN and MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeTienDienTheoNam @NAM int
as
begin transaction
	select b.MACTHDDIEN, TENHOADON, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from HOADONDIEN a, CTHDDIEN b
	where a.MAHOADONDIEN = b.MAHOADONDIEN and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create trigger ktraSuaTV on THANHVIENHOGD for update as
declare @SoLuongTV int
declare @MaHoGD nvarchar(10)
declare @MaHoGDUpdate nvarchar(10)
select @MaHoGD = MAHOGD from deleted
select @MaHoGDUpdate = MAHOGD from inserted
Update HOGIADINH set SOLUONGTV = SOLUONGTV + 1 where MAHOGD = @MaHoGDUpdate
Update HOGIADINH set SOLUONGTV = SOLUONGTV - 1 where MAHOGD = @MAHOGD
return

create procedure psThongKeTienNuoc @THANG int, @NAM int
as
begin transaction
	select b.MACTHDNUOC, TENHOADON, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from HOADONNUOC a, CTHDNUOC b
	where a.MAHOADONNUOC = b.MAHOADONNUOC and MONTH(NGAYIN) = @THANG and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psThongKeTienNuocTheoNam @NAM int
as
begin transaction
	select b.MACTHDNUOC, TENHOADON, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG, DONGIA, TONGTIEN
	from HOADONNUOC a, CTHDNUOC b
	where a.MAHOADONNUOC = b.MAHOADONNUOC and YEAR(NGAYIN) = @NAM
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiPhongBan
as
begin transaction
	select * from PHONGBAN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiNhanVien
as
begin transaction
	select * from NHANVIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiMaKhu 
As
begin transaction
	select * from KHU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiHoGiaDinh
as
begin transaction
	select * from HOGIADINH
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiCanHo
as
begin transaction
	select * from CANHO
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiDanhSachChiTietHoaDonDien
as
begin transaction
	select * from CTHDDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION


create procedure psHienThiHoaDonDien
as
begin transaction
	select * from HOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietHoaDonDien
as
begin transaction
	select HOADONDIEN.MAHOADONDIEN, TENHOADON, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONDIEN.GHICHU
	FROM HOADONDIEN, CTHDDIEN
	WHERE HOADONDIEN.MAHOADONDIEN=CTHDDIEN.MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietHoaDonDienTheoMaHoaDon @MAHOADONDIEN nvarchar(10)
as
begin transaction
	select HOADONDIEN.MAHOADONDIEN, TENHOADON, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONDIEN.GHICHU
	FROM HOADONDIEN, CTHDDIEN
	WHERE HOADONDIEN.MAHOADONDIEN=CTHDDIEN.MAHOADONDIEN
	and HOADONDIEN.MAHOADONDIEN=@MAHOADONDIEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietHoaDonNuocTheoMaHoaDon @MAHOADONNUOC nvarchar(10)
as
begin transaction
	select HOADONNUOC.MAHOADONNUOC, TENHOADON, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONNUOC.GHICHU
	FROM HOADONNUOC, CTHDNUOC
	WHERE HOADONNUOC.MAHOADONNUOC=CTHDNUOC.MAHOADONNUOC
	AND HOADONNUOC.MAHOADONNUOC=@MAHOADONNUOC
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietDichVuTheoMaHoaDon @MAHOADONDV nvarchar(10)
as
begin transaction
	select  HOADONDICHVU.MAHOADONDV, TENHOADON, DICHVU.MADICHVU, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONDICHVU.GHICHU
	FROM HOADONDICHVU, CTHDDICHVU, DICHVU
	WHERE DICHVU.MADICHVU = CTHDDICHVU.MADICHVU AND HOADONDICHVU.MAHOADONDV =  CTHDDICHVU.MAHOADONDV and HOADONDICHVU.MAHOADONDV = @MAHOADONDV
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiDanhSachTraCuuTheoMaHoGD @MAHOGD NVARCHAR(10), @MAKHU NVARCHAR(10)
AS
BEGIN TRANSACTION
	SELECT HOGIADINH.MAHOGD, TENCHUHO, CANHO.MAKHU 
	FROM HOGIADINH, CANHO
	WHERE HOGIADINH.MAHOGD=CANHO.MAHOGD AND CANHO.MAKHU = @MAKHU AND HOGIADINH.MAHOGD=@MAHOGD
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create PROC psHienThiDanhSachTraCuuTheoTenChuHo @TENCHUHO NVARCHAR(10), @MAKHU NVARCHAR(10)
AS
BEGIN TRANSACTION
	SELECT HOGIADINH.MAHOGD, TENCHUHO, CANHO.MAKHU 
	FROM HOGIADINH, CANHO
	WHERE HOGIADINH.MAHOGD=CANHO.MAHOGD AND CANHO.MAKHU = @MAKHU AND HOGIADINH.TENCHUHO=@TENCHUHO
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create PROC psHienThiDanhSachTraCuuTheoMaKhu @MAKHU NVARCHAR(10)
AS
BEGIN TRANSACTION
	SELECT HOGIADINH.MAHOGD, TENCHUHO, CANHO.MAKHU 
	FROM HOGIADINH, CANHO
	WHERE HOGIADINH.MAHOGD=CANHO.MAHOGD AND CANHO.MAKHU = @MAKHU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create PROCEDURE psHienThiDanhSachTraCuuHoGiaDinh @MAHOGD NVARCHAR(10), @TENCHUHO NVARCHAR(30), @MAKHU NVARCHAR(10)
AS
BEGIN TRANSACTION
	SELECT HOGIADINH.MAHOGD, TENCHUHO, KHU.MAKHU FROM HOGIADINH, CANHO, KHU WHERE HOGIADINH.MAHOGD=CANHO.MAHOGD AND CANHO.MAKHU=KHU.MAKHU AND HOGIADINH.MAHOGD=@MAHOGD AND TENCHUHO=@TENCHUHO AND KHU.MAKHU=@MAKHU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiKhu
AS
BEGIN TRANSACTION
	select * from KHU 
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiDanhSachTaiKhoan
as
begin transaction
	select * from DANGNHAP
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiQuyen
as
begin transaction
	select * from QUYEN
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create proc psHienThiHoaDonVaChiTietDichVu
as
begin transaction
	select  HOADONDICHVU.MAHOADONDV, TENHOADON, DICHVU.MADICHVU, SOLUONG, DONGIA, MANHANVIEN, MAHOGD, MACANHO, NGAYIN, SOLUONG*DONGIA AS THANHTIEN, HOADONDICHVU.GHICHU
	FROM HOADONDICHVU, CTHDDICHVU, DICHVU
	WHERE DICHVU.MADICHVU = CTHDDICHVU.MADICHVU AND HOADONDICHVU.MAHOADONDV =  CTHDDICHVU.MAHOADONDV
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiHoaDonDichVu
as
begin transaction
	select * from HOADONDICHVU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

create procedure psHienThiDichVu
as
begin transaction
	select * from DICHVU
if (@@ERROR <> 0)
ROLLBACK TRANSACTION
else
COMMIT TRANSACTION

